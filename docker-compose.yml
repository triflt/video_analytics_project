version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: video_analytics
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    #networks:
    #  - dem

  # app:
  #   container_name: "app"
  #   restart: unless-stopped
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - 8000:8000
  #   volumes:
  #     - .:/video_analytics_project
  #   depends_on:
  #     - postgres
  #   #networks:
  #   #  - dem

  # runner:
  #   container_name: "runner"
  #   restart: unless-stopped
  #   build:
  #     context: runner/
  #     dockerfile: Dockerfile
  #   volumes:
  #     - .:/video_analytics_project
  #   depends_on:
  #     - postgres
  #   #networks:
  #   #  - dem

  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5000:80"
    depends_on:
      - postgres
    #networks:
    #  - dem

#networks:
#  dem:
